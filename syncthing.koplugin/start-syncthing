#!/bin/sh
set -e

# Save config and data under the KOReader runtime directory
my_dir=$(realpath "$0" |sed -e 's/\/[^\/]*$//')
config_dir=${my_dir}/../../settings/syncthing
syncthing=${my_dir}/syncthing
pid_file=/tmp/syncthing_koreader.pid
arch=$(uname -m)
if [ "$arch" = "x86_64" ]; then
    syncthing=${my_dir}/syncthing-x86_64
fi

if [ -n "$1" ]; then
    home_dir=$1
else
    home_dir=/
fi


if [ -n "$2" ]; then
    port=$2
else
    port=8384
fi

if [ -n "$3" ]; then
    password=$3
fi

if [ ! -d /etc/ssl/certs ]; then
    mkdir -p /etc/ssl/certs
fi
if [ ! -f /etc/ssl/certs/ca-certificates.crt ]; then
    wget -O /etc/ssl/certs/ca-certificates.crt https://curl.se/ca/cacert.pem
fi

if [ ! -f "$config_dir/config.xml" ] || [ -n "$password" ]; then
    echo "Generating Syncthing configuration..."
    # Set HOME so that the default folder is created at $home_dir/Sync
    HOME=$home_dir "$syncthing" generate \
        --config="$config_dir" \
        --gui-user=syncthing \
        --gui-password="$password" \
        --skip-port-probing # Need this due to lack of IPv4 loopback in Kobo
fi

if [ ! -f "$config_dir/device-id" ]; then
    # Save the device ID to a file for easy access from KOReader
    "$syncthing" \
        --config="$config_dir" \
        --data="$config_dir" \
        --device-id > "$config_dir/device-id"
fi

# We need to listen to 0.0.0.0 so that the GUI is accessible over the network
"$syncthing" serve \
    --config="$config_dir" \
    --data="$config_dir" \
    --gui-address=http://0.0.0.0:$port \
    --logfile="$config_dir/logs" \
    --log-max-old-files=10 \
    --log-max-size=1048576 &

# Write the PID to be used for stopping Syncthing later
echo $! > "$pid_file"
